# DO NOT EDIT THIS FILE IN AN EDITOR THAT REPLACES TABS WITH SPACES
# MAKE REQUIRES TABS IN FRONT OF EVERY RECIPE

# Define variables
	IMAGE_NAME := skyflow-dji-stream-server
	ECR_REPO := 891376915868.dkr.ecr.eu-central-1.amazonaws.com/$(IMAGE_NAME)
	REGION := eu-central-1
	IMAGE_VERSION := latest
	GIT_VERSION := $(shell git rev-parse --short HEAD)
	STACK_NAME := SfDJIStreamStack
	CLUSTER_NAME := $(shell aws cloudformation describe-stacks \
		--stack-name $(STACK_NAME) \
		--query 'Stacks[0].Outputs[?OutputKey==`ClusterName`].OutputValue' \
		--output text \
		--region $(REGION))
	SERVICE_NAME := $(shell aws cloudformation describe-stacks \
		--stack-name $(STACK_NAME) \
		--query 'Stacks[0].Outputs[?OutputKey==`ServiceName`].OutputValue' \
		--output text \
		--region $(REGION))

# Default target
all: build

install-deps:
	npm ci --ignore-scripts

test-ci:
	npm run test:ci

# Build the Docker image
build:
	docker build -t $(IMAGE_NAME):$(IMAGE_VERSION) .

# Run the built image locally
start-local:
	docker run --rm -it --name stream-server -p 80:80 -p 1935:1935 $(IMAGE_NAME):$(IMAGE_VERSION)

# Remove the local container
stop-local:
	docker rm stream-server 

# Tag the Docker image
tag:
	docker tag $(IMAGE_NAME):$(IMAGE_VERSION) $(ECR_REPO):$(IMAGE_VERSION)

# Push the Docker image to ECR
push: tag
	aws ecr get-login-password --region $(REGION) | docker login --username AWS --password-stdin $(ECR_REPO)
	docker push $(ECR_REPO):$(IMAGE_VERSION)

# Docker image pipeline: build, tag, and push
deploy-image: build push

# Cloud infrastructure pipeline
deploy-infra:
	npx cdk synth
	npx cdk deploy --require-approval never

# Force new deployment of the ECS service
force-deploy:
	@if [ -z "$(CLUSTER_NAME)" ] || [ -z "$(SERVICE_NAME)" ]; then \
		echo "Error: Could not retrieve cluster or service name from CloudFormation"; \
		exit 1; \
	fi
	aws ecs update-service \
		--cluster $(CLUSTER_NAME) \
		--service $(SERVICE_NAME) \
		--force-new-deployment \
		--region $(REGION)

clean-git-branches:
	git branch | grep -v "main" | xargs git branch -D